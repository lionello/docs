"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[99672],{83970:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=t(85893),i=t(11151);const o={},r="Strategies",a={id:"reference/db/authorization/strategies",title:"Strategies",description:"Introduction",source:"@site/versioned_docs/version-1.21.1/reference/db/authorization/strategies.md",sourceDirName:"reference/db/authorization",slug:"/reference/db/authorization/strategies",permalink:"/docs/1.21.1/reference/db/authorization/strategies",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/oss/edit/main/versioned_docs/version-1.21.1/reference/db/authorization/strategies.md",tags:[],version:"1.21.1",frontMatter:{},sidebar:"docs",previous:{title:"Authorization",permalink:"/docs/1.21.1/reference/db/authorization/introduction"},next:{title:"User Roles & Metadata",permalink:"/docs/1.21.1/reference/db/authorization/user-roles-metadata"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"JSON Web Token (JWT)",id:"json-web-token-jwt",level:2},{value:"JSON Web Key Sets (JWKS)",id:"json-web-key-sets-jwks",level:3},{value:"JWT Custom Claim Namespace",id:"jwt-custom-claim-namespace",level:3},{value:"Webhook",id:"webhook",level:2},{value:"HTTP headers (development only)",id:"http-headers-development-only",level:2},{value:"Custom authorization strategies",id:"custom-authorization-strategies",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"strategies",children:"Strategies"}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"Platformatic DB supports the following authorization strategies:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#json-web-token-jwt",children:"JSON Web Token (JWT)"})," with support for ",(0,s.jsx)(n.a,{href:"#json-web-key-sets-jwks",children:"JSON Web Key Sets (JWKS)"})]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#webhook",children:"Webhook"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#http-headers-development-only",children:"HTTP headers (development only)"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"json-web-token-jwt",children:"JSON Web Token (JWT)"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://jwt.io/",children:"JSON Web Token"})," (JWT) authorization strategy is built on top\nof the ",(0,s.jsx)(n.a,{href:"https://github.com/fastify/fastify-jwt",children:(0,s.jsx)(n.code,{children:"@fastify/jwt"})})," Fastify plugin."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Platformatic DB JWT integration",src:t(52496).Z+"",width:"513",height:"274"})}),"\n",(0,s.jsxs)(n.p,{children:["To configure it, the quickest way is to pass a shared ",(0,s.jsx)(n.code,{children:"secret"})," in your\nPlatformatic DB configuration file, for example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="platformatic.db.json"',children:'{\n  "authorization": {\n    "jwt": {\n      "secret": "<shared-secret>"\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["By default ",(0,s.jsx)(n.code,{children:"@fastify/jwt"})," looks for a JWT in an HTTP request's ",(0,s.jsx)(n.code,{children:"Authorization"}),"\nheader. This requires HTTP requests to the Platformatic DB API to include an\n",(0,s.jsx)(n.code,{children:"Authorization"})," header like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Authorization: Bearer <token>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsxs)(n.a,{href:"https://github.com/fastify/fastify-jwt#options",children:[(0,s.jsx)(n.code,{children:"@fastify/jwt"})," documentation"]}),"\nfor all of the available configuration options."]}),"\n",(0,s.jsx)(n.h3,{id:"json-web-key-sets-jwks",children:"JSON Web Key Sets (JWKS)"}),"\n",(0,s.jsxs)(n.p,{children:["The JWT authorization strategy includes support for ",(0,s.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc7517",children:"JSON Web Key"})," Sets."]}),"\n",(0,s.jsx)(n.p,{children:"To configure it:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="platformatic.db.json"',children:'{\n  "authorization": {\n    "jwt": {\n      "jwks": {\n        "allowedDomains": [\n          "https://ISSUER_DOMAIN"\n        ]\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When a JSON Web Token is included in a request to Platformatic DB, it retrieves the\ncorrect public key from ",(0,s.jsx)(n.code,{children:"https:/ISSUER_DOMAIN/.well-known/jwks.json"})," and uses it to\nverify the JWT signature. The token carries all the informations, like the ",(0,s.jsx)(n.code,{children:"kid"}),",\nwhich is the key id used to sign the token itself, so no other configuration is required."]}),"\n",(0,s.jsx)(n.p,{children:"JWKS can be enabled without any options:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="platformatic.db.json"',children:'{\n  "authorization": {\n    "jwt": {\n      "jwks": true\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When configured like this, the JWK URL is calculated from the ",(0,s.jsx)(n.code,{children:"iss"})," (issuer) field of JWT, so\nevery JWT token from an issuer that exposes a valid JWKS token will pass the validation.\n",(0,s.jsx)(n.strong,{children:"This configuration should only be used in development"}),", while\nin every other case the ",(0,s.jsx)(n.code,{children:"allowedDomains"})," option should be specified."]}),"\n",(0,s.jsxs)(n.p,{children:["Any option supported by the ",(0,s.jsx)(n.a,{href:"https://github.com/nearform/get-jwks#options",children:(0,s.jsx)(n.code,{children:"get-jwks"})}),"\nlibrary can be specified in the ",(0,s.jsx)(n.code,{children:"authorization.jwt.jwks"})," object."]}),"\n",(0,s.jsx)(n.h3,{id:"jwt-custom-claim-namespace",children:"JWT Custom Claim Namespace"}),"\n",(0,s.jsxs)(n.p,{children:["JWT claims can be namespaced to avoid name collisions. If so, we will receive tokens\nwith custom claims such as: ",(0,s.jsx)(n.code,{children:"https://platformatic.dev/X-PLATFORMATIC-ROLE"}),"\n(where ",(0,s.jsx)(n.code,{children:"https://platformatic.dev/"})," is the namespace).\nIf we want to map these claims to user metadata removing our namespace, we can\nspecify the namespace in the JWT options:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="platformatic.db.json"',children:'{\n  "authorization": {\n    "jwt": {\n      "namespace": "https://platformatic.dev/"\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["With this configuration, the ",(0,s.jsx)(n.code,{children:"https://platformatic.dev/X-PLATFORMATIC-ROLE"})," claim\nis mapped to ",(0,s.jsx)(n.code,{children:"X-PLATFORMATIC-ROLE"})," user metadata."]}),"\n",(0,s.jsx)(n.h2,{id:"webhook",children:"Webhook"}),"\n",(0,s.jsx)(n.p,{children:"Platformatic DB can use a webhook to authenticate requests."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Platformatic DB Webhook integration",src:t(16024).Z+"",width:"606",height:"324"})}),"\n",(0,s.jsx)(n.p,{children:"In this case, the URL is configured on authorization:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="platformatic.db.json"',children:'{\n  "authorization": {\n    "webhook": {\n      "url": "<webhook url>"\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When a request is received, Platformatic sends a ",(0,s.jsx)(n.code,{children:"POST"})," to the webhook, replicating\nthe same body and headers, except for:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"host"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"connection"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In the Webhook case, the HTTP response contains the roles/user information as HTTP headers."}),"\n",(0,s.jsx)(n.h2,{id:"http-headers-development-only",children:"HTTP headers (development only)"}),"\n",(0,s.jsx)(n.admonition,{type:"danger",children:(0,s.jsx)(n.p,{children:"Passing an admin API key via HTTP headers is highly insecure and should only be used\nduring development or within protected networks."})}),"\n",(0,s.jsxs)(n.p,{children:["If a request has ",(0,s.jsx)(n.code,{children:"X-PLATFORMATIC-ADMIN-SECRET"})," HTTP header set with a valid ",(0,s.jsx)(n.code,{children:"adminSecret"}),"\n(see ",(0,s.jsx)(n.a,{href:"/docs/1.21.1/reference/db/configuration#authorization",children:"configuration reference"}),") the\nrole is set automatically as ",(0,s.jsx)(n.code,{children:"platformatic-admin"}),", unless a different role is set for\nuser impersonation (which is disabled if JWT or Webhook are set, see ",(0,s.jsx)(n.a,{href:"#user-impersonation",children:"below"}),")."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Platformatic DB HTTP Headers",src:t(56010).Z+"",width:"472",height:"310"})}),"\n",(0,s.jsxs)(n.p,{children:["Also, the following rule is automatically added to every entity, allowing the user\nthat presented the ",(0,s.jsx)(n.code,{children:"adminSecret"})," to perform any operation on any entity:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "role": "platformatic-admin",\n  "find": false,\n  "delete": false,\n  "save": false\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"custom-authorization-strategies",children:"Custom authorization strategies"}),"\n",(0,s.jsxs)(n.p,{children:["You can create your own authorization strategy using a ",(0,s.jsx)(n.code,{children:"addAuthStrategy"})," function. ",(0,s.jsx)(n.code,{children:"addAuthStrategy"})," accepts a strategy ",(0,s.jsx)(n.code,{children:"name"})," and a ",(0,s.jsx)(n.code,{children:"createSession"})," function as a params. ",(0,s.jsx)(n.code,{children:"createSession"})," function should set ",(0,s.jsx)(n.code,{children:"request.user"})," object. All custom strategies will be executed after ",(0,s.jsx)(n.code,{children:"jwt"})," and ",(0,s.jsx)(n.code,{children:"webhook"})," default strategies."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Example"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"app.addAuthStrategy({\n  name: 'custom-auth-strategy',\n  createSession: async (req, reply) => {\n    req.user = { id: 42, role: 'admin' }\n  }\n})\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},56010:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/http-16e850f4929a4d5c21a629cbe609b67e.png"},52496:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/jwt-f72781533567349fb71fc37b9768e847.png"},16024:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/webhook-35d01c3e23ac75c26c9d519daa16cf1b.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var s=t(67294);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);