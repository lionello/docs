"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[9082],{46378:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var t=n(85893),s=n(11151);const r={},i="API modification",c={id:"reference/composer/api-modification",title:"API modification",description:"If you want to modify automatically generated API, you can use composer custom onRoute hook.",source:"@site/docs/reference/composer/api-modification.md",sourceDirName:"reference/composer",slug:"/reference/composer/api-modification",permalink:"/docs/next/reference/composer/api-modification",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/platformatic/edit/main/docs/reference/composer/api-modification.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Programmatic API",permalink:"/docs/next/reference/composer/programmatic"},next:{title:"Platformatic DB",permalink:"/docs/next/reference/db/introduction"}},d={},a=[{value:"<code>addComposerOnRouteHook(openApiPath, methods, handler)</code>",id:"addcomposeronroutehookopenapipath-methods-handler",level:4},{value:"onComposerResponse",id:"oncomposerresponse",level:3}];function p(e){const o={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"api-modification",children:"API modification"}),"\n",(0,t.jsxs)(o.p,{children:["If you want to modify automatically generated API, you can use composer custom ",(0,t.jsx)(o.code,{children:"onRoute"})," hook."]}),"\n",(0,t.jsx)(o.h4,{id:"addcomposeronroutehookopenapipath-methods-handler",children:(0,t.jsx)(o.code,{children:"addComposerOnRouteHook(openApiPath, methods, handler)"})}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:(0,t.jsx)(o.code,{children:"openApiPath"})})," (",(0,t.jsx)(o.code,{children:"string"}),") - A route OpenAPI path that Platformatic Composer takes from the OpenAPI specification."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:(0,t.jsx)(o.code,{children:"methods"})})," (",(0,t.jsx)(o.code,{children:"string[]"}),") - Route HTTP methods that Platformatic Composer takes from the OpenAPI specification."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:(0,t.jsx)(o.code,{children:"handler"})})," (",(0,t.jsx)(o.code,{children:"function"}),") - fastify ",(0,t.jsx)(o.a,{href:"https://www.fastify.io/docs/latest/Reference/Hooks/#onroute",children:"onRoute"})," hook handler."]}),"\n"]}),"\n",(0,t.jsx)(o.h3,{id:"oncomposerresponse",children:"onComposerResponse"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"onComposerResponse"})," hook is called after the response is received from a composed service.\nIt might be useful if you want to modify the response before it is sent to the client.\nIf you want to use it you need to add ",(0,t.jsx)(o.code,{children:"onComposerResponse"})," property to the ",(0,t.jsx)(o.code,{children:"config"})," object of the route options."]}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:(0,t.jsx)(o.code,{children:"request"})})," (",(0,t.jsx)(o.code,{children:"object"}),") - fastify request object."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:(0,t.jsx)(o.code,{children:"reply"})})," (",(0,t.jsx)(o.code,{children:"object"}),") - fastify reply object."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:(0,t.jsx)(o.code,{children:"body"})})," (",(0,t.jsx)(o.code,{children:"object"}),") - ",(0,t.jsx)(o.a,{href:"https://undici.nodejs.org/",children:"undici"})," response body object."]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:(0,t.jsx)(o.em,{children:"Example"})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-js",children:"app.platformatic.addComposerOnRouteHook('/users/{id}', ['GET'], routeOptions => {\n  routeOptions.schema.response[200] = {\n    type: 'object',\n    properties: {\n      firstName: { type: 'string' },\n      lastName: { type: 'string' }\n    }\n  }\n\n  async function onComposerResponse (request, reply, body) {\n    const payload = await body.json()\n    const newPayload = {\n      firstName: payload.first_name,\n      lastName: payload.last_name\n    }\n    reply.send(newPayload)\n  }\n  routeOptions.config.onComposerResponse = onComposerResponse\n})\n"})})]})}function l(e={}){const{wrapper:o}={...(0,s.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,o,n)=>{n.d(o,{Z:()=>c,a:()=>i});var t=n(67294);const s={},r=t.createContext(s);function i(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);