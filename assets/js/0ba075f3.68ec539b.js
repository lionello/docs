"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[21258],{54709:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var o=t(85893),r=t(11151);const s={},a="Programmatic API",i={id:"reference/composer/programmatic",title:"Programmatic API",description:"In many cases it's useful to start Platformatic Composer using an API instead of",source:"@site/versioned_docs/version-1.22.0/reference/composer/programmatic.md",sourceDirName:"reference/composer",slug:"/reference/composer/programmatic",permalink:"/docs/1.22.0/reference/composer/programmatic",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/oss/edit/main/versioned_docs/version-1.22.0/reference/composer/programmatic.md",tags:[],version:"1.22.0",frontMatter:{},sidebar:"docs",previous:{title:"Configuration",permalink:"/docs/1.22.0/reference/composer/configuration"},next:{title:"API modification",permalink:"/docs/1.22.0/reference/composer/api-modification"}},c={},p=[];function m(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"programmatic-api",children:"Programmatic API"}),"\n",(0,o.jsx)(n.p,{children:"In many cases it's useful to start Platformatic Composer using an API instead of\ncommand line, e.g. in tests we want to start and stop our server."}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"buildServer"})," function allows that:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { buildServer } from '@platformatic/composer'\n\nconst app = await buildServer('path/to/platformatic.composer.json')\nawait app.start()\n\nconst res = await fetch(app.url)\nconsole.log(await res.json())\n\n// do something\n\nawait app.close()\n"})}),"\n",(0,o.jsx)(n.p,{children:"It is also possible to customize the configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { buildServer } from '@platformatic/composer'\n\nconst app = await buildServer({\n  server: {\n    hostname: '127.0.0.1',\n    port: 0\n  },\n  services: [\n    {\n      id: 'auth-service',\n      origin: 'https://auth-service.com',\n      openapi: {\n        url: '/documentation/json',\n        prefix: 'auth'\n      }\n    },\n    {\n      id: 'payment-service',\n      origin: 'https://payment-service.com',\n      openapi: {\n        file: './schemas/payment-service.json'\n      }\n    }\n  ]\n})\n\nawait app.start()\n\nconst res = await fetch(app.url)\nconsole.log(await res.json())\n\n// do something\n\nawait app.close()\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>a});var o=t(67294);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);